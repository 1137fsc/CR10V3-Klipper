# !CR-10 V3 
# printer_size: 300x300x400
# version: 3.6
# This file contains common pin mappings for the 2020 Creality CR-10 V3. 
# The mainboard is a Creality 3D v2.5.2 (8-bit mainboard with
# ATMega2560). To use this config, the firmware should be compiled for
# the AVR atmega2560.

# 225point leveling.



###fluidd set
[virtual_sdcard]
path: ~/gcode_files

[display_status]

[pause_resume]

[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
# change this if you need more or less extrusion
variable_extrude: 1.0
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  ##### set park positon for x and y #####
  # default is your max posion from your printer.cfg
  {% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
  {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
  ##### calculate save lift position #####
  {% set max_z = printer.toolhead.axis_maximum.z|float %}
  {% set act_z = printer.toolhead.position.z|float %}
  {% if act_z < (max_z - 2.0) %}
      {% set z_safe = 2.0 %}
  {% else %}
      {% set z_safe = max_z - act_z %}
  {% endif %}
  ##### end of definitions #####
  PAUSE_BASE
  G91
  {% if printer.extruder.can_extrude|lower == 'true' %}
    G1 E-{E} F2100
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}
  {% if "xyz" in printer.toolhead.homed_axes %}
    G1 Z{z_safe} F900
    G90
    G1 X{x_park} Y{y_park} F6000
  {% else %}
    {action_respond_info("Printer not homed")}
  {% endif %} 

[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  #### get VELOCITY parameter if specified ####
  {% if 'VELOCITY' in params|upper %}
    {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
  {%else %}
    {% set get_params = "" %}
  {% endif %}
  ##### end of definitions #####
  {% if printer.extruder.can_extrude|lower == 'true' %}
    G91
    G1 E{E} F2100
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}  
  RESUME_BASE {get_params}

[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
gcode:
  TURN_OFF_HEATERS
  {% if "xyz" in printer.toolhead.homed_axes %}
    G91
    G1 Z4.5 F300
    G90
  {% else %}
    {action_respond_info("Printer not homed")}
  {% endif %}
    G28 X Y
  {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
    G1 Y{y_park} F2000
    M84
  CANCEL_PRINT_BASE

[gcode_macro FILAMENT_RUNOUT]
description: Handles filament runout
gcode:
  M117 Filament runout detected!  # Display message on the printer screen
  SAVE_GCODE_STATE NAME=RUNOUT_STATE  # Save the current print state
  PAUSE
  G91  # Relative positioning
  G1 E-15 F2100  # Retract filament by 15mm
  G90  # Absolute positioning
  {action_respond_info("Filament runout detected. Please load new filament.")}
  {action_respond_info("The printer will wait until new filament is detected.")}

  # Wait for the filament sensor to detect new filament
  {% if not printer["filament_sensor"].filament_present %}
    {action_respond_info("Waiting for filament reload...")}
    M118 Filament runout - waiting for reload
    WAIT_FOR_SENSOR_TRIGGER filament_sensor  # Wait for the filament sensor to detect new filament
  {% endif %}

  M117 Filament detected. Purging...  # Display message on the printer screen
  G1 E10 F2100  # Purge a small amount of filament
  M117 Purge complete. Confirm purge or resume.  # Prompt user
  {action_respond_info("Filament detected. Use the following commands to proceed:")}
  {action_respond_info(" - FILAMENT_RESUME PURGE=True (to purge more filament)")}
  {action_respond_info(" - FILAMENT_RESUME (to resume the print)")}

[gcode_macro FILAMENT_RESUME]
description: Handle filament reload and continue print
gcode:
  {% if params.PURGE|default(False)|lower == 'true' %}
    M117 Purging more filament...  # Display message on the printer screen
    G1 E10 F2100  # Purge 10mm more
    M117 Purge complete. Ready to continue.  # Notify user
    {action_respond_info("Purge complete. Use FILAMENT_RESUME to resume the print.")}
  {% else %}
    M117 Resuming print...  # Display message on the printer screen
    RESTORE_GCODE_STATE NAME=RUNOUT_STATE  # Restore the print state
    RESUME  # Resume printing
    {action_respond_info("Printing resumed.")}
  {% endif %}

[include timelapse.cfg]

[stepper_x]
step_pin: PF0 #ar54
dir_pin: PF1 #ar55
enable_pin: !PD7 #!ar38
microsteps: 16
rotation_distance: 40
endstop_pin: ^PE5 #^ar3
position_endstop: 0
position_max: 310
homing_speed: 125
#max_accel: 10999  # As close to the recommended  without overshooting


[stepper_y]
step_pin: PF6 #ar60
dir_pin: PF7 #ar61
enable_pin: !PF2 #!ar56
microsteps: 16
rotation_distance: 40
endstop_pin: ^PJ1 #^ar14
position_endstop: 0
position_max: 310
homing_speed: 125
#max_velocity: 200  # Safe value for large bed movement
#max_accel: 3100

[stepper_z]
step_pin: PL3 #ar46
dir_pin: !PL1 #!ar48
enable_pin: !PK0 #!ar62
microsteps: 16
rotation_distance: 8
position_max: 400
position_min: -5.5
endstop_pin: probe:z_virtual_endstop
homing_speed: 35


[safe_z_home]
home_xy_position: 183.3,193.0
speed: 125
z_hop: 10
z_hop_speed: 8

[extruder]
step_pin: PA4 #ar26
dir_pin: !PA6 #!ar28
enable_pin: !PA2 #!ar24
microsteps: 16
rotation_distance: 7.53
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: PB4 #ar10
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PK5 #analog13
#control: pid
#pid_kp: 29.291
#pid_ki: 1.743
#pid_kd: 123.021
min_temp: 0
max_temp: 310
pressure_advance: 0.038


[heater_bed]
heater_pin: PH5 #ar8
sensor_type: ATC Semitec 104GT-2
sensor_pin: PK6 #analog14
#control: pid
#pid_Kp: 201.86
#pid_Ki: 10.67
#pid_Kd: 954.96
min_temp: 0
max_temp: 130

[fan]
pin: PH6 #ar9

[mcu]
serial: /dev/serial/by-id/usb_serial_2
restart_method: command

# [mcu rpi]
# serial: /tmp/klipper_host_mcu

# [adxl345]
# cs_pin: rpi:None
# spi_speed: 2000000
# spi_bus: spidev2.0

# [resonance_tester]
# accel_chip: adxl345
# accel_per_hz: 70
# probe_points:
#         150,150,10
    
[input_shaper] #I wonder if this is generic settingss or what?? not generic. when you run the input shaper commands, it gives you the bes shaper type and freq for the best vibration, and also gives the best value for max accel. 
#but you cannot set each axis acceleration, it is whole for the machine. Which means you are limited if you have a bed slinger by the y axis. 
shaper_type_x = mzv
shaper_freq_x = 67.8
shaper_type_y = mzv
shaper_freq_y = 27.2

[printer]
kinematics: cartesian
max_velocity: 350
max_accel: 3500
max_z_velocity: 35
max_z_accel: 300
square_corner_velocity: 5.0
max_accel_to_decel: 4000



[exclude_object]

[display]
lcd_type: st7920
cs_pin: PH1 #ar16
sclk_pin: PA1 #ar23
sid_pin: PH0 #ar17
encoder_pins: ^PC4, ^PC6
click_pin: ^!PC2

[bltouch]
sensor_pin: ^PD2
control_pin: PB5
set_output_mode: 5V
pin_move_time: 0.4
stow_on_each_sample: False
probe_with_touch_mode: True
x_offset: -31.8
y_offset: -40.5
#z_offset: 0
samples: 2
sample_retract_dist: 2
samples_result: average

[bed_mesh]
speed: 175               # Speed of XY movement during probing
horizontal_move_z: 8     # distance Z-axis movement
mesh_min: 5,5            # Leave a buffer from the bed edges
mesh_max: 276,266        # Adjusted for probe offsets and bed limits
probe_count: 15,15       # Number of probing points (increase for finer mesh)
algorithm: bicubic       # Interpolation algorithm
move_check_distance: 5   # Minimum distance to check before move
split_delta_z: 0.025     # Max delta for interpolation
fade_start: 1
fade_end: 10
fade_target: 0

[pause_resume]
recover_velocity: 125


[filament_switch_sensor filament_sensor]
pause_on_runout: False  # Disable the default PAUSE behavior
switch_pin: PE4  # Adjust this to match your actual sensor pin
runout_gcode: FILAMENT_RUNOUT  # Call the FILAMENT_RUNOUT macro

[gcode_macro G29]  # If moving from marlin to klipper uncomment to mimic G29
gcode:
 G28
 BED_MESH_CALIBRATE
 G1 X0 Y0 Z15 F4000

[gcode_arcs]
#resolution: 1.0

[bed_screws]
screw1: 40,40
screw1_name: front left screw
screw2: 305,40
screw2_name: front right screw
screw3: 305,305
screw3_name: rear right screw
screw4: 40,305
screw4_name: rear left screw

#Not so sure if this is needed or what it will do... pretty sure this needs to be defined in klipper for it to be useful
[screws_tilt_adjust]
screw1: 40,40
screw1_name: front left screw
screw2: 305,40
screw2_name: front right screw
screw3: 305,305
screw3_name: rear right screw
screw4: 40,305
screw4_name: rear left screw
speed: 50
horizontal_move_z: 10
screw_thread: CW-M3

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	0.368750, 0.218750, 0.092500, 0.155000, -0.022500, -0.016250, -0.103750, -0.113750, -0.122500, -0.171250, -0.042500, -0.047500, -0.018750, 0.020000, 0.078750
#*# 	0.176250, 0.070000, 0.025000, 0.022500, -0.083750, -0.092500, -0.162500, -0.190000, -0.121250, -0.136250, -0.056250, -0.076250, 0.023750, 0.026250, 0.083750
#*# 	0.128750, -0.008750, -0.090000, -0.045000, -0.217500, -0.268750, -0.273750, -0.297500, -0.281250, -0.268750, -0.206250, -0.218750, -0.151250, -0.081250, -0.022500
#*# 	0.125000, 0.025000, -0.032500, -0.046250, -0.165000, -0.200000, -0.240000, -0.286250, -0.223750, -0.230000, -0.205000, -0.200000, -0.140000, -0.077500, -0.047500
#*# 	0.028750, -0.061250, -0.146250, -0.171250, -0.262500, -0.337500, -0.358750, -0.383750, -0.307500, -0.323750, -0.233750, -0.212500, -0.187500, -0.078750, -0.026250
#*# 	-0.025000, -0.085000, -0.146250, -0.137500, -0.275000, -0.268750, -0.306250, -0.342500, -0.337500, -0.268750, -0.197500, -0.198750, -0.070000, -0.025000, 0.002500
#*# 	0.025000, -0.097500, -0.207500, -0.191250, -0.346250, -0.347500, -0.390000, -0.437500, -0.386250, -0.378750, -0.313750, -0.286250, -0.238750, -0.118750, -0.055000
#*# 	0.077500, 0.021250, -0.038750, -0.065000, -0.202500, -0.213750, -0.273750, -0.333750, -0.267500, -0.282500, -0.255000, -0.233750, -0.125000, -0.081250, -0.045000
#*# 	0.090000, -0.052500, -0.145000, -0.190000, -0.282500, -0.311250, -0.366250, -0.420000, -0.350000, -0.377500, -0.301250, -0.276250, -0.200000, -0.135000, -0.036250
#*# 	0.137500, 0.077500, -0.006250, -0.060000, -0.198750, -0.203750, -0.252500, -0.306250, -0.293750, -0.292500, -0.241250, -0.206250, -0.157500, -0.067500, -0.020000
#*# 	0.231250, 0.083750, -0.051250, -0.068750, -0.205000, -0.253750, -0.296250, -0.336250, -0.325000, -0.336250, -0.286250, -0.270000, -0.225000, -0.132500, -0.071250
#*# 	0.363750, 0.225000, 0.148750, 0.058750, -0.056250, -0.090000, -0.130000, -0.198750, -0.171250, -0.148750, -0.153750, -0.130000, -0.053750, -0.031250, 0.005000
#*# 	0.308750, 0.137500, 0.021250, 0.005000, -0.137500, -0.190000, -0.243750, -0.245000, -0.237500, -0.217500, -0.192500, -0.211250, -0.132500, -0.023750, 0.043750
#*# 	0.405000, 0.270000, 0.155000, 0.125000, -0.000000, -0.050000, -0.072500, -0.182500, -0.122500, -0.155000, -0.070000, -0.096250, -0.026250, -0.002500, 0.008750
#*# 	0.400000, 0.237500, 0.127500, 0.083750, -0.031250, -0.085000, -0.136250, -0.185000, -0.151250, -0.167500, -0.122500, -0.113750, -0.061250, 0.016250, 0.070000
#*# x_count = 15
#*# y_count = 15
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = bicubic
#*# tension = 0.2
#*# min_x = 4.9999999999999964
#*# max_x = 275.9
#*# min_y = 5.0
#*# max_y = 265.96
#*#
#*# [bed_mesh initial]
#*# version = 1
#*# points =
#*# 	-0.155000, -0.158750, -0.057500, -0.063750, -0.066250, -0.023750, 0.105000, 0.143750, 0.171250
#*# 	-0.245000, -0.258750, -0.201250, -0.132500, -0.056250, -0.065000, 0.011250, 0.121250, 0.201250
#*# 	-0.230000, -0.295000, -0.202500, -0.106250, -0.097500, -0.062500, 0.031250, 0.186250, 0.222500
#*# 	-0.252500, -0.258750, -0.232500, -0.198750, -0.103750, -0.018750, -0.021250, 0.018750, 0.215000
#*# 	-0.305000, -0.382500, -0.296250, -0.261250, -0.133750, -0.100000, 0.013750, 0.078750, 0.173750
#*# 	-0.303750, -0.370000, -0.278750, -0.230000, -0.181250, -0.060000, -0.070000, 0.052500, 0.165000
#*# 	-0.326250, -0.350000, -0.257500, -0.228750, -0.108750, -0.047500, 0.031250, 0.122500, 0.221250
#*# 	-0.292500, -0.366250, -0.247500, -0.246250, -0.133750, -0.046250, 0.021250, 0.055000, 0.235000
#*# 	-0.238750, -0.357500, -0.262500, -0.218750, -0.081250, -0.032500, 0.091250, 0.087500, 0.260000
#*# x_count = 9
#*# y_count = 9
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = bicubic
#*# tension = 0.2
#*# min_x = 4.9999999999999964
#*# max_x = 273.0
#*# min_y = 5.0
#*# max_y = 263.96
#*#
#*# [bltouch]
#*# z_offset = 3.980
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 16.118
#*# pid_ki = 0.693
#*# pid_kd = 93.684
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 76.938
#*# pid_ki = 1.230
#*# pid_kd = 1203.124
